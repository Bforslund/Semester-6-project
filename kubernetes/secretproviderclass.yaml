# This is a SecretProviderClass example using system-assigned identity to access your key vault
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: azure-kvname-system-msi
spec:
  provider: azure
  secretObjects:                           
    - data:
      - key: connectionString                           # data field to populate
        objectName: hotelDB--DefaultConnection                        # name of the mounted content to sync; this could be the object name or the object alias
      secretName: hotelservice-secret                     # name of the Kubernetes secret object
      type: Opaque  
      - key: aws3-accesskey-key                           # data field to populate
        objectName: aws3-accesskey                        # name of the mounted content to sync; this could be the object name or the object alias
      secretName: aws3-accesskey-secret                    # name of the Kubernetes secret object
      type: Opaque 
  parameters:
    tenantId: c66b6765-b794-4a2b-84ed-845b341c086a           # The tenant ID of the key vault
    usePodIdentity: "false"
    useVMManagedIdentity: "true"    # Set to true for using managed identity
    userAssignedIdentityID: "105b4b17-20fb-4164-9032-a922447f1897" 
    keyvaultName: application-secrets
    objects:  |
      array:
        - |
          objectName: hotelDB--DefaultConnection
          objectType: secret        
        - |
          objectName: aws3-accesskey
          objectType: secret        
